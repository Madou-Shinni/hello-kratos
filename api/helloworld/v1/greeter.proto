syntax = "proto3";

package helloworld.v1;

import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "google/protobuf/empty.proto";
import "stock/v1/stock.proto";

option go_package = "helloword/api/helloworld/v1;v1";
option java_multiple_files = true;
option java_package = "dev.kratos.api.helloworld.v1";
option java_outer_classname = "HelloworldProtoV1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info : {
    title : "hello-kratos";
    version : "1.0";
  };
  schemes : HTTP;
  schemes : HTTPS;
  security_definitions : {
    security : {
      key: "TokenAuth";
      value: {
        type: TYPE_API_KEY;
        in: IN_HEADER;
        name: "Authorization";
        description: "用户认证,格式为: Bearer+空格+token";
      }
    };
  };
};

// The greeting service definition.
service Greeter {
  // Sends a greeting
  rpc SayHello (HelloRequest) returns (HelloReply) {
    option (google.api.http) = {
      get: "/helloworld/{name}"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "helloword";
      tags: ["hello-kratos"];
    };
  }

  // 扣库存
  rpc DeductStock (api.stock.v1.DeductStockRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/stock/deduct"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "扣库存";
      tags: ["stock"];
    };
  }

  // 增加库存
  rpc AddStock (api.stock.v1.IncreaseStockRequest) returns (google.protobuf.Empty) {
    option (google.api.http) = {
      post: "/stock/add"
      body: "*"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      summary: "增加库存";
      tags: ["stock"];
    };
  }
}

// The request message containing the user's name.
message HelloRequest {
  string name = 1; // 名称
}

// The response message containing the greetings
message HelloReply {
  string message = 1;
}
